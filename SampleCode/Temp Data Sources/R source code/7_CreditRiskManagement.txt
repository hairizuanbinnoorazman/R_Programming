## p 101
V0 <- 100; nu <- 0.1; sigma <- 0.2

dt <- 1 / 252; Time <- 1

M <- Time / dt

n <- 10000

set.seed(117)

val <- rnorm(n*M, mean = (nu - sigma^2 / 2) * dt, sd = sigma * dt^0.5)

dlnV <- matrix(val, M, n)

## p 102
V <- V0 * exp(apply(dlnV, 2, cumsum))

matplot(x = seq(0 + dt, Time, dt), y = V[, 1:5], type = 's', lty = 1, xlab = 'Time', ylab = 'Firm value trajectories', main = 'Trajectories of firm values in the Merton model')

## p 103
r <- 0.05; K <- 80

D <- exp(-r * Time) * mean((pmin(V[M, ], K)))

D

install.packages("fOptions"); library(fOptions)

V0 - GBSOption(TypeFlag = "c", S = V0, X = K, Time = Time, r = r, b = r, sigma = sigma)@price

## p 104
Time <- seq(0.1, 10, 0.1)

D <- V0 - GBSOption(TypeFlag = "c", S = V0, X = K, Time = Time, r = r, b = r, sigma = sigma)@price

matplot(x = Time, y = creditspreads, type = 'l', xlab = 'Maturity', ylab = 'Credit spreads', main = 'Term structure of credit spreads in the Merton model')

## p 107
library(sde)

Time <- 1; dt <- 1/252; M <- Time / dt

lambda <- sde.sim(X0 = 0.1, delta = dt,T = Time, N = M, theta = c (0.05, 0.5, 0.2), model = "CIR")

n <- 5
set.seed(117); val <- rpois(n * (M + 1), lambda)

dN <- matrix(val, M + 1, n)

N <- apply(dN, 2, cumsum)

## p 108
matplot(x = seq(0, Time, dt), y = N[, 1:5], type = 's', xlab = 'Time', ylab = "'Number of defaults' process trajectories", main = 'Trajectories of Cox processes ')

## p 109
library(copula)
norm.cop <- normalCopula(0.7)

set.seed(117); u1 <- rCopula(500, norm.cop)

t.cop <- tCopula(0.7, df = 4)

set.seed(117); u2 <- rCopula(500, t.cop)

## p 110
par(mfcol = c(1, 2))
plot(u1, main = 'Scatter graphs of random variable pairs generated by Gaussian copula')
plot(u2, main = 'Scatter graphs of random variable pairs generated by t-copula')

fit.ml <- fitCopula(norm.cop, u1, method = "ml")

fit.ml

## p 111
library(CreditMetrics)
lgd <- 0.5
rc <- c( "A", "B", "D")
M <- matrix(c(85, 13, 2, 5, 80, 15, 0, 0, 100 ) /100, 3, 3, dimnames = list(rc, rc), byrow = TRUE)

cm.cs(M, lgd)
